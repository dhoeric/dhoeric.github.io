---
layout: post
slug: aws-iam
title: "Cheatsheet for AWS IAM policy"
date: 2017-04-24 22:28:16 +0800
comments: true
tags: [aws, iam, ecr, s3, devops]
---
[AWS IAM](http://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html) is a service to control permission over AWS's different services, which is pretty useful for restricting access level for CI services or other account.

AWS itself actually already provided templates policy but it usually still too wide for specific usage.
Here is just to name a few common usages for (myself) reference.

### S3
- Deploy to specific bucket
{{< highlight json "linenos=table" >}}
{
  "Version":"2012-10-17",
  "Statement":[
    {
      "Effect":"Allow",
      "Action":["s3:PutObject"],
      "Resource":"arn:aws:s3:::[DEPLOY_BUCKET]/*"
    }
  ]
}
{{< / highlight >}}

- For Ansible s3 module get object
{{< highlight json "linenos=table" >}}
{
  "Version":"2012-10-17",
  "Statement":[
    {
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:ListBucket"
      ],
      "Resource": [
        "arn:aws:s3:::mah-bucket",
        "arn:aws:s3:::mah-bucket/*"
      ]
    }
  ]
}
{{< / highlight >}}

### IAM
- Allow user create/list/update/delete on their own Access Key
{{< highlight json "linenos=table" >}}
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "Stmt1495696888000",
      "Effect": "Allow",
      "Action": [
        "iam:CreateAccessKey",
        "iam:DeleteAccessKey",
        "iam:GetAccessKeyLastUsed",
        "iam:ListAccessKeys",
        "iam:UpdateAccessKey"
      ],
      "Resource": [
        "arn:aws:iam::[USER_ID]:user/${aws:username}"
      ]
    }
  ]
}
{{< / highlight >}}

### Amazon EC2 Container Registry (ECR)
- Image builder (push image)
{{< highlight json "linenos=table" >}}
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:CompleteLayerUpload",
        "ecr:GetDownloadUrlForLayer",
        "ecr:InitiateLayerUpload",
        "ecr:PutImage",
        "ecr:UploadLayerPart"
      ],
      "Resource": "arn:aws:ecr:[AWS_REGION]:[USER_ID]:repository/*"
    },
    {
      "Effect": "Allow",
      "Action": [
        "ecr:GetAuthorizationToken"
      ],
      "Resource": "*"
    }
  ]
}
{{< / highlight >}}

- Image reader (pull image)
{{< highlight json "linenos=table" >}}
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "Stmt1491209809000",
      "Effect": "Allow",
      "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:DescribeRepositories",
        "ecr:GetAuthorizationToken",
        "ecr:GetDownloadUrlForLayer",
        "ecr:GetRepositoryPolicy",
        "ecr:ListImages"
      ],
      "Resource": [
        "arn:aws:ecr:*"
      ]
    }
  ]
}
{{< / highlight >}}

### DynamoDB
- Hashicorp Vault DynamoDB Storage Backend
{{< highlight json "linenos=table" >}}
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "dynamodb:ListTables"
      ],
      "Resource": [
        "*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:CreateTable",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem",
        "dynamodb:UpdateTable"
      ],
      "Resource": [
        "arn:aws:dynamodb:[AWS_REGION]:[USER_ID]:table/[VAULT_TABLE]"
      ]
    }
  ]
}
{{< / highlight >}}

## Reference
- [https://iam.cloudonaut.io/](https://iam.cloudonaut.io/)
- [http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html](http://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html)
- <http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html>
